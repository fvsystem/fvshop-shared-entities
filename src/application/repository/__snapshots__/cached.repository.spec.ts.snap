// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CachedRepository should cache bulkInsert and invalidate find_all 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:_list": undefined,
    "FakeCachedRepository:find_id:088f6493-f1d4-47ec-b922-7c7a6655f02e": Object {
      "id": "088f6493-f1d4-47ec-b922-7c7a6655f02e",
      "name": "test2",
    },
    "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28": Object {
      "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
      "name": "test",
    },
  },
  "delete": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:_list",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
  "set": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
        Object {
          "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
          "name": "test",
        },
      ],
      Array [
        "FakeCachedRepository:find_id:088f6493-f1d4-47ec-b922-7c7a6655f02e",
        Object {
          "id": "088f6493-f1d4-47ec-b922-7c7a6655f02e",
          "name": "test2",
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;

exports[`CachedRepository should cache delete and invalidate find_all 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:_list": undefined,
    "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28": undefined,
  },
  "delete": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:_list",
      ],
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
      ],
      Array [
        "FakeCachedRepository:_list",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
  "set": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
        Object {
          "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
          "name": "test",
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;

exports[`CachedRepository should cache findAll 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:_list": Promise {},
  },
  "get": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:_list",
      ],
      Array [
        "FakeCachedRepository:_list",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;

exports[`CachedRepository should cache findById 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28": Object {
      "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
      "name": "test",
    },
  },
  "get": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
      ],
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;

exports[`CachedRepository should cache insert and invalidate find_all 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:_list": undefined,
    "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28": Object {
      "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
      "name": "test",
    },
  },
  "delete": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:_list",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
  "set": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
        Object {
          "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
          "name": "test",
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;

exports[`CachedRepository should cache update and invalidate find_all 1`] = `
FakeCacheService {
  "cache": Object {
    "FakeCachedRepository:_list": undefined,
    "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28": Object {
      "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
      "name": "test2",
    },
  },
  "delete": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:_list",
      ],
      Array [
        "FakeCachedRepository:_list",
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
  "set": [MockFunction] {
    "calls": Array [
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
        Object {
          "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
          "name": "test2",
        },
      ],
      Array [
        "FakeCachedRepository:find_id:7c195903-6ef3-43ed-b181-0ccb14876e28",
        Object {
          "id": "7c195903-6ef3-43ed-b181-0ccb14876e28",
          "name": "test2",
        },
      ],
    ],
    "results": Array [
      Object {
        "type": "return",
        "value": Promise {},
      },
      Object {
        "type": "return",
        "value": Promise {},
      },
    ],
  },
}
`;
